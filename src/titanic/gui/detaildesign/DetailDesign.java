/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package titanic.gui.detaildesign;

import javax.swing.JButton;
import javax.swing.JLabel;

/**
 *
 * @author Menes
 */
public class DetailDesign extends javax.swing.JPanel {

    /**
     * Creates new form DetailDesign
     */
    public DetailDesign() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        drawButton = new javax.swing.JButton();
        modelButton = new javax.swing.JButton();
        simulateButton = new javax.swing.JButton();
        calculateButton = new javax.swing.JButton();
        writeButton = new javax.swing.JButton();
        returnBackLabel = new javax.swing.JLabel();

        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        setLayout(layout);

        drawButton.setText("Dibujar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(drawButton, gridBagConstraints);

        modelButton.setText("Modelar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        add(modelButton, gridBagConstraints);

        simulateButton.setText("Simular");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        add(simulateButton, gridBagConstraints);

        calculateButton.setText("Calcular");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        add(calculateButton, gridBagConstraints);

        writeButton.setText("Escribir");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        add(writeButton, gridBagConstraints);

        returnBackLabel.setText("<- Back");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 5;
        add(returnBackLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculateButton;
    private javax.swing.JButton drawButton;
    private javax.swing.JButton modelButton;
    private javax.swing.JLabel returnBackLabel;
    private javax.swing.JButton simulateButton;
    private javax.swing.JButton writeButton;
    // End of variables declaration//GEN-END:variables

    public JButton getCalculateButton() {
        return calculateButton;
    }

    public void setCalculateButton(JButton calculateButton) {
        this.calculateButton = calculateButton;
    }

    public JButton getDrawButton() {
        return drawButton;
    }

    public void setDrawButton(JButton drawButton) {
        this.drawButton = drawButton;
    }

    public JButton getModelButton() {
        return modelButton;
    }

    public void setModelButton(JButton modelButton) {
        this.modelButton = modelButton;
    }

    public JLabel getReturnBackLabel() {
        return returnBackLabel;
    }

    public void setReturnBackLabel(JLabel returnBackLabel) {
        this.returnBackLabel = returnBackLabel;
    }

    public JButton getSimulateButton() {
        return simulateButton;
    }

    public void setSimulateButton(JButton simulateButton) {
        this.simulateButton = simulateButton;
    }

    public JButton getWriteButton() {
        return writeButton;
    }

    public void setWriteButton(JButton writeButton) {
        this.writeButton = writeButton;
    }
}
